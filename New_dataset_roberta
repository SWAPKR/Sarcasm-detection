{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"New_dataset_roberta","provenance":[{"file_id":"1vJm89K5GifSBrgk13JUA_9L_ijaynqu1","timestamp":1624448853836},{"file_id":"1SaLnCHSb6TrMEFtSK8DQ00RXaH7roO2W","timestamp":1624439603375},{"file_id":"1ftGKQ22ZBSIX_d6KEpUI7vRczYgtQPMF","timestamp":1620983839237},{"file_id":"https://github.com/prateekjoshi565/Fine-Tuning-BERT/blob/master/Fine_Tuning_BERT_for_Spam_Classification.ipynb","timestamp":1619947106006}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"widgets":{"application/vnd.jupyter.widget-state+json":{"b49a44ec87834b5ea5bccfaec99bdbec":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_62eb7cf6ab3e4a4193e776f2bb837b06","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_298b9bc3d7c74e2788fa27ddb86360b1","IPY_MODEL_3a875f6eb8b54833bae9546a29bfd7c3"]}},"62eb7cf6ab3e4a4193e776f2bb837b06":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"298b9bc3d7c74e2788fa27ddb86360b1":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_0058c0ac238042d5b3179a5c01e15c26","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":482,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":482,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_60f659b197bf4c93bd3b6247ffe45019"}},"3a875f6eb8b54833bae9546a29bfd7c3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_c35078df94614eef8bb72c0a682812d3","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 482/482 [00:01&lt;00:00, 316B/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_bd967dab33c442e6ac687460259a8f97"}},"0058c0ac238042d5b3179a5c01e15c26":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"60f659b197bf4c93bd3b6247ffe45019":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"c35078df94614eef8bb72c0a682812d3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"bd967dab33c442e6ac687460259a8f97":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"b090b0dfd9ab4ae4b97c13758572e8c7":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_6d095aa9f89346e496e630eff02188b9","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_4f408653156e43049370498e8044e74e","IPY_MODEL_4691549615474a4fab42afdd0e05da80"]}},"6d095aa9f89346e496e630eff02188b9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"4f408653156e43049370498e8044e74e":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_73620bad12fb4599b5c0ce700aa0fff5","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1425941629,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1425941629,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_1b91f505c0a648c5b25f3e67547e13da"}},"4691549615474a4fab42afdd0e05da80":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_b05327b927f442aca303834835db3bb2","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1.43G/1.43G [00:47&lt;00:00, 30.2MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_5fac2c6754274dc0a85d69eb3eea249f"}},"73620bad12fb4599b5c0ce700aa0fff5":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"1b91f505c0a648c5b25f3e67547e13da":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"b05327b927f442aca303834835db3bb2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"5fac2c6754274dc0a85d69eb3eea249f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"83279163a61842448a1730488fc07178":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_b6e3dd31283e4ef59ba61d1717c87a8d","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_9aee55dc8bdf4509b798b1f2c9b56bcb","IPY_MODEL_e05facd3d38b4c1586a58beb97990963"]}},"b6e3dd31283e4ef59ba61d1717c87a8d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"9aee55dc8bdf4509b798b1f2c9b56bcb":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_2343a50f34344ba2a093c8d9c46c3ebf","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":898823,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":898823,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_6f0a2a1d61fd44e0ab5b1ddb2207b156"}},"e05facd3d38b4c1586a58beb97990963":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_78f22eaf639440a69dac2076fbd11620","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 899k/899k [00:02&lt;00:00, 343kB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_5d84e579047e4f03bfffa8a17b3d8f31"}},"2343a50f34344ba2a093c8d9c46c3ebf":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"6f0a2a1d61fd44e0ab5b1ddb2207b156":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"78f22eaf639440a69dac2076fbd11620":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"5d84e579047e4f03bfffa8a17b3d8f31":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"734df26bf58c4da18709b1b9f779a1b7":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_24eb32d5d3bd43d6b24f0602b8ae6fe7","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_d2fafcf5296c42cb8055f2b43e1d74df","IPY_MODEL_c2fe82be9096475caa32648febd531d7"]}},"24eb32d5d3bd43d6b24f0602b8ae6fe7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"d2fafcf5296c42cb8055f2b43e1d74df":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_01b6881e10dc43428657957400211d9b","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":456318,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":456318,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_4219233b782549c9b04bfbe37dd95457"}},"c2fe82be9096475caa32648febd531d7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_13e26bfa619a4ea98c7887fd48c2536d","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 456k/456k [00:05&lt;00:00, 90.7kB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_451f48fea3234006b43def3313e3accd"}},"01b6881e10dc43428657957400211d9b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"4219233b782549c9b04bfbe37dd95457":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"13e26bfa619a4ea98c7887fd48c2536d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"451f48fea3234006b43def3313e3accd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"3192d56ac2df447c83363800c08bdffb":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_004ba62c242a421a985729907e63434a","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_434dbd16a0c44febb67f3951ebce9744","IPY_MODEL_93b1b357dfb34e11af235b99137e32dc"]}},"004ba62c242a421a985729907e63434a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"434dbd16a0c44febb67f3951ebce9744":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_3e610cb994c8417daedbbf74cbe5977e","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1355863,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1355863,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_43a6ee8bd29a4d078bcf3a8b6abeb83f"}},"93b1b357dfb34e11af235b99137e32dc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_201b17a9ba8c4794ae0eabe8cb615f80","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1.36M/1.36M [00:00&lt;00:00, 1.73MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_248c543bda8d42dfad9af19a754d60c8"}},"3e610cb994c8417daedbbf74cbe5977e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"43a6ee8bd29a4d078bcf3a8b6abeb83f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"201b17a9ba8c4794ae0eabe8cb615f80":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"248c543bda8d42dfad9af19a754d60c8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"OFOTiqrtNvyy"},"source":["# Install Transformers Library"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-gaXRgYI7xKG","executionInfo":{"status":"ok","timestamp":1626689106973,"user_tz":-330,"elapsed":865,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"6463ce79-2b5f-4374-d3b9-0f8a154e0739"},"source":["!nvidia-smi"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mon Jul 19 10:05:05 2021       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla K80           Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   73C    P8    33W / 149W |      0MiB / 11441MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IfUBJLufrKqn","executionInfo":{"status":"ok","timestamp":1626689136151,"user_tz":-330,"elapsed":28571,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"d258d7d2-4ca6-42cf-babb-2ce3c0cd03e5"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1hkhc10wNrGt","executionInfo":{"status":"ok","timestamp":1626689144574,"user_tz":-330,"elapsed":8427,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"38c41026-8950-4aef-f023-29756fc17e3e"},"source":["!pip install transformers"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting transformers\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/fd/1a/41c644c963249fd7f3836d926afa1e3f1cc234a1c40d80c5f03ad8f6f1b2/transformers-4.8.2-py3-none-any.whl (2.5MB)\n","\u001b[K     |████████████████████████████████| 2.5MB 4.3MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (1.19.5)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers) (3.0.12)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers) (2.23.0)\n","Collecting huggingface-hub==0.0.12\n","  Downloading https://files.pythonhosted.org/packages/2f/ee/97e253668fda9b17e968b3f97b2f8e53aa0127e8807d24a547687423fe0b/huggingface_hub-0.0.12-py3-none-any.whl\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.7/dist-packages (from transformers) (3.13)\n","Collecting tokenizers<0.11,>=0.10.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d4/e2/df3543e8ffdab68f5acc73f613de9c2b155ac47f162e725dcac87c521c11/tokenizers-0.10.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (3.3MB)\n","\u001b[K     |████████████████████████████████| 3.3MB 25.7MB/s \n","\u001b[?25hRequirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from transformers) (4.6.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (2019.12.20)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from transformers) (4.41.1)\n","Collecting sacremoses\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/75/ee/67241dc87f266093c533a2d4d3d69438e57d7a90abb216fa076e7d475d4a/sacremoses-0.0.45-py3-none-any.whl (895kB)\n","\u001b[K     |████████████████████████████████| 901kB 36.5MB/s \n","\u001b[?25hRequirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from transformers) (21.0)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2021.5.30)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (3.0.4)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from huggingface-hub==0.0.12->transformers) (3.7.4.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->transformers) (3.5.0)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers) (1.0.1)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers) (7.1.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers) (1.15.0)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->transformers) (2.4.7)\n","Installing collected packages: huggingface-hub, tokenizers, sacremoses, transformers\n","Successfully installed huggingface-hub-0.0.12 sacremoses-0.0.45 tokenizers-0.10.3 transformers-4.8.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"x4giRzM7NtHJ"},"source":["import numpy as np\n","import pandas as pd\n","# import torch\n","import torch\n","import torch.nn as nn\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report\n","import transformers\n","# from transformers import AutoModel, BertTokenizerFast\n","from transformers import RobertaTokenizer, RobertaModel,RobertaForSequenceClassification\n","# specify GPU\n","device = torch.device(\"cuda\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"bZ0odRyxsbSE","executionInfo":{"status":"ok","timestamp":1626689154558,"user_tz":-330,"elapsed":5201,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"8fde9861-5c86-42ca-f276-bf75d7935af1"},"source":["# df=open('/content/drive/MyDrive/sarcasm detection/Datasets/Additional_data/train/Train_v1.txt')\n","# df.readlines(0)\n","df=pd.read_csv('/content/drive/MyDrive/sarcasm detection/Datasets/Additional_data/train/Train_v1.txt',delimiter='\\t',header=None,names=['train','labels','response']).drop(labels='train',axis=1)\n","df1=pd.read_csv('/content/drive/MyDrive/sarcasm detection/Datasets/Additional_data/test/Test_v1.txt',delimiter='\\t',header=None,names=['test','labels','response']).drop(labels='test',axis=1)\n","df2=pd.read_csv('/content/drive/MyDrive/sarcasm detection/Datasets/Additional_data/dev/Dev_v1.txt',delimiter='\\t',header=None,names=['dev','labels','response']).drop(labels='dev',axis=1)\n","# d=open('/content/drive/MyDrive/sarcasm detection/Datasets/Additional_data/dev/Dev_context_moods.txt')\n","# d.readlines(0)\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>labels</th>\n","      <th>response</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>@0430yes i hope youre lurking rn. i want to li...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>05 really taught me a valuable lesson I'm neve...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>@098BERRY Never had a voice to protest, so you...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>@0hMySt4rs Rest in peace &amp; love to you and you...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>100 days until Christmas! 🌲 #too soon #not rea...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   labels                                           response\n","0       0  @0430yes i hope youre lurking rn. i want to li...\n","1       0  05 really taught me a valuable lesson I'm neve...\n","2       0  @098BERRY Never had a voice to protest, so you...\n","3       0  @0hMySt4rs Rest in peace & love to you and you...\n","4       0  100 days until Christmas! 🌲 #too soon #not rea..."]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Huko-ZrTuRN8","executionInfo":{"status":"ok","timestamp":1626689154560,"user_tz":-330,"elapsed":9,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"590e5e2b-cc9d-4ffa-e3f1-52d2f33b57fb"},"source":["print(df.shape)\n","print(df1.shape)\n","print(df2.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(39780, 2)\n","(1975, 2)\n","(1571, 2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_-MepcHcO3_M"},"source":["# df[df['labels']==0]['response'].values[:50]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1CpQxLslJlNv","executionInfo":{"status":"ok","timestamp":1626689167467,"user_tz":-330,"elapsed":12913,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"10926984-ce6b-4b0b-b90d-24fdcb52d5f5"},"source":["import pandas as pd\n","import re\n","import nltk\n","from nltk.stem import WordNetLemmatizer\n","from nltk.tokenize import RegexpTokenizer\n","from nltk.corpus import stopwords\n","import re\n","import string\n","import numpy as np\n","from nltk.corpus import stopwords\n","from nltk.stem import PorterStemmer\n","from nltk.tokenize import TweetTokenizer\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from tqdm.auto import tqdm\n","!pip install demoji\n","!pip install contractions\n","import demoji\n","import contractions\n","\n","demoji.download_codes()\n","nltk.download('stopwords') \n","# nltk.download('wordnet')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting demoji\n","  Downloading https://files.pythonhosted.org/packages/88/6a/34379abe01c9c36fe9fddc4181dd935332e7d0159ec3fae76f712e49bcea/demoji-0.4.0-py2.py3-none-any.whl\n","Collecting colorama\n","  Downloading https://files.pythonhosted.org/packages/44/98/5b86278fbbf250d239ae0ecb724f8572af1c91f4a11edf4d36a206189440/colorama-0.4.4-py2.py3-none-any.whl\n","Requirement already satisfied: requests<3.0.0 in /usr/local/lib/python3.7/dist-packages (from demoji) (2.23.0)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0->demoji) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0->demoji) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0->demoji) (2.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0->demoji) (2021.5.30)\n","Installing collected packages: colorama, demoji\n","Successfully installed colorama-0.4.4 demoji-0.4.0\n","Collecting contractions\n","  Downloading https://files.pythonhosted.org/packages/93/f4/0ec4a458e4368cc3be2c799411ecf0bc961930e566dadb9624563821b3a6/contractions-0.0.52-py2.py3-none-any.whl\n","Collecting textsearch>=0.0.21\n","  Downloading https://files.pythonhosted.org/packages/d3/fe/021d7d76961b5ceb9f8d022c4138461d83beff36c3938dc424586085e559/textsearch-0.0.21-py2.py3-none-any.whl\n","Collecting pyahocorasick\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/7f/c2/eae730037ae1cbbfaa229d27030d1d5e34a1e41114b21447d1202ae9c220/pyahocorasick-1.4.2.tar.gz (321kB)\n","\u001b[K     |████████████████████████████████| 327kB 5.8MB/s \n","\u001b[?25hCollecting anyascii\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a3/14/666cd44bf53f36a961544af592cb5c5c800013f9c51a4745af8d7c17362a/anyascii-0.2.0-py3-none-any.whl (283kB)\n","\u001b[K     |████████████████████████████████| 286kB 33.3MB/s \n","\u001b[?25hBuilding wheels for collected packages: pyahocorasick\n","  Building wheel for pyahocorasick (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyahocorasick: filename=pyahocorasick-1.4.2-cp37-cp37m-linux_x86_64.whl size=85401 sha256=27186ca2af7ac58da1634094ba5f7fd0f78340bd8a3a19a9049c5d2bfa59f4e3\n","  Stored in directory: /root/.cache/pip/wheels/3a/03/34/77e3ece0bba8b86bfac88a79f923b36d805cad63caeba38842\n","Successfully built pyahocorasick\n","Installing collected packages: pyahocorasick, anyascii, textsearch, contractions\n","Successfully installed anyascii-0.2.0 contractions-0.0.52 pyahocorasick-1.4.2 textsearch-0.0.21\n","Downloading emoji data ...\n","... OK (Got response in 0.55 seconds)\n","Writing emoji data to /root/.demoji/codes.json ...\n","... OK\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"Z5qBvDp14S4z"},"source":["def preprocess_text(text):\n","    # Tokenise words while ignoring punctuation(https://www.nltk.org/_modules/nltk/tokenize/regexp.html)\n","    # text = re.sub(r\"@\",'', text)\n","    # text = re.sub(r'\\b(\\w+)( \\1\\b)+', r'\\1', text)\n","    text = re.sub(r'@\\w+','',text)\n","    # text = re.sub(r\"USER\",'@USER', text)\n","    text = re.sub(r'<URL>','',text)\n","    text = re.sub(r'#sarcasm','',text)\n","    text = re.sub(r'#sarcastic','',text)\n","\n","    text = demoji.replace_with_desc(text)\n","    text = re.sub(r':','',text)\n","    text = contractions.fix(text)\n","    # text = re.sub(r'\\.+','',text)\n","    return text"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kbn2PHEb428M","executionInfo":{"status":"ok","timestamp":1626689167468,"user_tz":-330,"elapsed":15,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"02ead53f-e630-467a-aa41-e57b27bbf731"},"source":["for i in range(5):\n","  print(df['response'][i])\n","  print(preprocess_text(df['response'][i]))\n","  # print(preprocess_text2(df['response'][i]))\n","  print()\n","  # print(df['context_resp'][i])\n","  # print(preprocess_text(df['context_resp'][i]))\n","  # print(preprocess_text2(df['context_resp'][i]))\n","  # print()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["@0430yes i hope youre lurking rn. i want to listen to hallucination & wanna love you again live someday, pretty please?! 😭 😭 😭\n"," i hope you are lurking rn. i want to listen to hallucination & want to love you again live someday, pretty please?! loudly crying face loudly crying face loudly crying face\n","\n","05 really taught me a valuable lesson I'm never gonna be late again! #Not\n","05 really taught me a valuable lesson I am never going to be late again! #Not\n","\n","@098BERRY Never had a voice to protest, so you fed me shit to digest. I wish I had a reason, my flaws are open season.\n"," Never had a voice to protest, so you fed me shit to digest. I wish I had a reason, my flaws are open season.\n","\n","@0hMySt4rs Rest in peace & love to you and your family\n"," Rest in peace & love to you and your family\n","\n","100 days until Christmas! 🌲 #too soon #not ready yet\n","100 days until Christmas! evergreen tree #too soon #not ready yet\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Nj-zpWUjt0IB"},"source":["# def fun(A,l):\n","#   if len(A)<=l:\n","#     return A\n","#   else:\n","#     return A[-l::1]\n","#     # return A[-1:-l-1:-1]\n","# def fun1(A):\n","#   return ''.join(A)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Y3DFJt513x7X"},"source":["# l=2\n","\n","# # df['tweets']= df['response'] +'reply-'+ df['context'].apply(fun,args=[l]).apply(fun1)\n","# # df1['tweets']=df1['response'] +'reply-'+ df1['context'].apply(fun,args=[l]).apply(fun1)\n","# df['tweets']= df['context'].apply(fun,args=[l]).apply(fun1) + df['response']\n","# df1['tweets']= df1['context'].apply(fun,args=[l]).apply(fun1) + df1['response']\n","\n","# df['tweets']= df['tweets'].apply(preprocess_text)\n","# df1['tweets']=df1['tweets'].apply(preprocess_text)\n","# # df['tweets']=df['tweets']+'reply-'+ df['response'].apply(preprocess_text)\n","# # df1['tweets']=df1['tweets']+'reply-'+ df1['response'].apply(preprocess_text)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"362uQOD63xvg"},"source":["# print(df['context'][0])\n","# print(df['response'][0])\n","# print(df['tweets'][0])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gabrMzRf6iqX"},"source":["df['tweets']=df['response'].apply(preprocess_text)\n","df1['tweets']=df1['response'].apply(preprocess_text)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"676DPU1BOPdp","executionInfo":{"status":"ok","timestamp":1626689207330,"user_tz":-330,"elapsed":8,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"acf385c0-145b-4690-a46b-405366781e2d"},"source":["# check class distribution\n","df['labels'].value_counts(normalize = True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    0.535244\n","1    0.464756\n","Name: labels, dtype: float64"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"MKfWnApvOoE7"},"source":["# Split train dataset into train, validation and test sets"]},{"cell_type":"code","metadata":{"id":"mfhSPF5jOWb7"},"source":["\n","X_s = df['tweets'].values\n","y_s = df['labels'].values\n","\n","Xt_s = df1['tweets'].values\n","yt_s = df1['labels'].values\n","\n","train_text, temp_text, train_labels, temp_labels = X_s,Xt_s,y_s,yt_s\n","\n","# we will use temp_text and temp_labels to create validation and test set\n","val_text, test_text, val_labels, test_labels = train_test_split(temp_text, temp_labels, \n","                                                                random_state=0, \n","                                                                test_size=0.5, \n","                                                                stratify=temp_labels)\n","val_text, test_text, val_labels, test_labels=temp_text, temp_text, temp_labels, temp_labels\n","\n","# X_train, X_test, y_train, y_test = train_test_split(X_s, y_s, test_size=0.2, random_state=42)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"W1jEFb39cCjk"},"source":["# pip install -U sentence-transformers"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"n7hsdLoCO7uB"},"source":["# Import BERT Model and BERT Tokenizer\n","\n","---\n","\n","\n","\n","---\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331,"referenced_widgets":["b49a44ec87834b5ea5bccfaec99bdbec","62eb7cf6ab3e4a4193e776f2bb837b06","298b9bc3d7c74e2788fa27ddb86360b1","3a875f6eb8b54833bae9546a29bfd7c3","0058c0ac238042d5b3179a5c01e15c26","60f659b197bf4c93bd3b6247ffe45019","c35078df94614eef8bb72c0a682812d3","bd967dab33c442e6ac687460259a8f97","b090b0dfd9ab4ae4b97c13758572e8c7","6d095aa9f89346e496e630eff02188b9","4f408653156e43049370498e8044e74e","4691549615474a4fab42afdd0e05da80","73620bad12fb4599b5c0ce700aa0fff5","1b91f505c0a648c5b25f3e67547e13da","b05327b927f442aca303834835db3bb2","5fac2c6754274dc0a85d69eb3eea249f","83279163a61842448a1730488fc07178","b6e3dd31283e4ef59ba61d1717c87a8d","9aee55dc8bdf4509b798b1f2c9b56bcb","e05facd3d38b4c1586a58beb97990963","2343a50f34344ba2a093c8d9c46c3ebf","6f0a2a1d61fd44e0ab5b1ddb2207b156","78f22eaf639440a69dac2076fbd11620","5d84e579047e4f03bfffa8a17b3d8f31","734df26bf58c4da18709b1b9f779a1b7","24eb32d5d3bd43d6b24f0602b8ae6fe7","d2fafcf5296c42cb8055f2b43e1d74df","c2fe82be9096475caa32648febd531d7","01b6881e10dc43428657957400211d9b","4219233b782549c9b04bfbe37dd95457","13e26bfa619a4ea98c7887fd48c2536d","451f48fea3234006b43def3313e3accd","3192d56ac2df447c83363800c08bdffb","004ba62c242a421a985729907e63434a","434dbd16a0c44febb67f3951ebce9744","93b1b357dfb34e11af235b99137e32dc","3e610cb994c8417daedbbf74cbe5977e","43a6ee8bd29a4d078bcf3a8b6abeb83f","201b17a9ba8c4794ae0eabe8cb615f80","248c543bda8d42dfad9af19a754d60c8"]},"id":"S1kY3gZjO2RE","executionInfo":{"status":"ok","timestamp":1626689267548,"user_tz":-330,"elapsed":60223,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"0632bd33-fe7b-4cdf-ac25-f888f96484c0"},"source":["# import BERT-base pretrained model\n","# bert = AutoModel.from_pretrained('bert-base-uncased')\n","\n","# # Load the BERT tokenizer\n","# tokenizer = BertTokenizerFast.from_pretrained('bert-base-uncased')\n","# import BERT-base pretrained model\n","\n","\n","# from transformers import RobertaTokenizer, RobertaModel\n","# bert = RobertaModel.from_pretrained('roberta-base')\n","\n","# # Load the BERT tokenizer\n","# tokenizer = RobertaTokenizer.from_pretrained('roberta-base')\n","\n","\n","from transformers import RobertaTokenizer, RobertaModel\n","bert = RobertaModel.from_pretrained('roberta-large')\n","\n","# Load the BERT tokenizer\n","tokenizer = RobertaTokenizer.from_pretrained('roberta-large')\n","\n","# from transformers import RobertaTokenizer, RobertaForSequenceClassification\n","# bert = RobertaForSequenceClassification.from_pretrained('roberta-base')\n","\n","# # Load the BERT tokenizer\n","# tokenizer = RobertaTokenizer.from_pretrained('roberta-base')"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b49a44ec87834b5ea5bccfaec99bdbec","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=482.0, style=ProgressStyle(description_…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b090b0dfd9ab4ae4b97c13758572e8c7","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=1425941629.0, style=ProgressStyle(descr…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"stream","text":["Some weights of the model checkpoint at roberta-large were not used when initializing RobertaModel: ['lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.decoder.weight', 'lm_head.bias', 'lm_head.dense.weight', 'lm_head.dense.bias']\n","- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n"],"name":"stderr"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"83279163a61842448a1730488fc07178","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=898823.0, style=ProgressStyle(descripti…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"734df26bf58c4da18709b1b9f779a1b7","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=456318.0, style=ProgressStyle(descripti…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3192d56ac2df447c83363800c08bdffb","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=1355863.0, style=ProgressStyle(descript…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_zOKeOMeO-DT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626689267549,"user_tz":-330,"elapsed":20,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"fa6c1957-78b9-4c0f-b06a-e731351770ba"},"source":["\n","# sample data\n","text = [\"this is a bert model tutorial\", \"we will fine-tune a bert model\"]\n","# encode text\n","sent_id = tokenizer.batch_encode_plus(text, padding=True, return_token_type_ids=False)\n","\n","# output\n","print(sent_id)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'input_ids': [[0, 9226, 16, 10, 741, 2399, 1421, 35950, 2, 1, 1, 1], [0, 1694, 40, 2051, 12, 90, 4438, 10, 741, 2399, 1421, 2]], 'attention_mask': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"8wIYaWI_Prg8"},"source":["# Tokenization"]},{"cell_type":"code","metadata":{"id":"yKwbpeN_PMiu"},"source":["# # get length of all the messages in the train set\n","# seq_len = [len(i.split()) for i in train_text]\n","# for i in train_text:\n","#   print(i)\n","# pd.Series(seq_len).hist(bins = 30)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tMA3styN-wXc"},"source":["# total=0\n","# for i in range(5000):\n","#   total+=len(df['tweets'][i].split())\n","# total/5000"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OXcswEIRPvGe"},"source":["max_seq_len = 70\n","seed=42"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tk5S7DWaP2t6"},"source":["# tokenize and encode sequences in the training set\n","\n","tokens_train = tokenizer.batch_encode_plus(\n","    train_text.tolist(),\n","    max_length = max_seq_len,\n","    padding=True,\n","    truncation=True,    \n",")\n","\n","# tokenize and encode sequences in the validation set\n","tokens_val = tokenizer.batch_encode_plus(\n","    val_text.tolist(),\n","    max_length = max_seq_len,\n","    padding=True,\n","    truncation=True,\n","    return_token_type_ids=False\n","    \n",")\n","\n","# tokenize and encode sequences in the test set\n","tokens_test = tokenizer.batch_encode_plus(\n","    test_text.tolist(),\n","    max_length = max_seq_len,\n","    padding=True,\n","    truncation=True,\n","    return_token_type_ids=False\n","    \n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aIDkh2QK-2Th","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626684821376,"user_tz":-330,"elapsed":18,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"507b212e-58c2-4338-c3aa-6dae92c53c6e"},"source":["count=0\n","maxi=0\n","for i in range(5000):\n","  maxi=max(maxi,len(train_text[i].split()))\n","  if len(train_text[i].split())>63:\n","    count+=1\n","    print(i,df['tweets'][i])\n","    # break\n","count\n","# maxi"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1910  this one is the best second album of you ever red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart red heart\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":58}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3wnQTrAF-2P-","executionInfo":{"status":"ok","timestamp":1626684821376,"user_tz":-330,"elapsed":15,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"37f96223-f529-4507-f1f2-4e8985fb3e5f"},"source":["print(train_text[3211])\n","print(tokens_train.data['input_ids'][3211])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Day off tomorrow! cannot wait to have a nice lie in\n","[0, 10781, 160, 3859, 328, 1395, 2067, 7, 33, 10, 2579, 6105, 11, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nl7Q3K1q-2Oc","executionInfo":{"status":"ok","timestamp":1626684821377,"user_tz":-330,"elapsed":12,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"df0920bf-ad12-45b1-ad0a-11b612041036"},"source":["print(tokenizer.get_vocab()[\"her\"])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1843\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Wsm8bkRZQTw9"},"source":["# Convert Integer Sequences to Tensors"]},{"cell_type":"code","metadata":{"id":"QR-lXwmzQPd6"},"source":["# for train set\n","train_seq = torch.tensor(tokens_train['input_ids'])\n","train_mask = torch.tensor(tokens_train['attention_mask'])\n","train_y = torch.tensor(train_labels.tolist())\n","\n","# for validation set\n","val_seq = torch.tensor(tokens_val['input_ids'])\n","val_mask = torch.tensor(tokens_val['attention_mask'])\n","val_y = torch.tensor(val_labels.tolist())\n","\n","# for test set\n","test_seq = torch.tensor(tokens_test['input_ids'])\n","test_mask = torch.tensor(tokens_test['attention_mask'])\n","test_y = torch.tensor(test_labels.tolist())"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ov1cOBlcRLuk"},"source":["# Create DataLoaders"]},{"cell_type":"code","metadata":{"id":"PrrIzivRjY4a"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qUy9JKFYQYLp"},"source":["from torch.utils.data import TensorDataset, DataLoader, RandomSampler, SequentialSampler\n","\n","#define a batch size\n","batch_size = 32\n","\n","# wrap tensors\n","train_data = TensorDataset(train_seq, train_mask, train_y)\n","\n","# sampler for sampling the data during training\n","train_sampler = RandomSampler(train_data)\n","\n","# dataLoader for train set\n","train_dataloader = DataLoader(train_data, sampler=train_sampler, batch_size=batch_size)\n","\n","# wrap tensors\n","val_data = TensorDataset(val_seq, val_mask, val_y)\n","\n","# sampler for sampling the data during training\n","val_sampler = SequentialSampler(val_data)\n","\n","# dataLoader for validation set\n","val_dataloader = DataLoader(val_data, sampler = val_sampler, batch_size=batch_size)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"K2HZc5ZYRV28"},"source":["# Freeze BERT Parameters"]},{"cell_type":"code","metadata":{"id":"wHZ0MC00RQA_"},"source":["# freeze all the parameters\n","for param in bert.parameters():\n","    param.requires_grad = False\n","# print(bert)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"s7ahGBUWRi3X"},"source":["# Define Model Architecture"]},{"cell_type":"code","metadata":{"id":"b3iEtGyYRd0A"},"source":["class BERT_Arch(nn.Module):\n","\n","    def __init__(self, bert):\n","      \n","      super(BERT_Arch, self).__init__()\n","\n","      self.bert = bert \n","      \n","      # dropout layer\n","      self.dropout = nn.Dropout(0.1)\n","      \n","      # relu activation function\n","      self.relu =  nn.ReLU()\n","\n","      # dense layer 1\n","      self.fc1 = nn.Linear(1024,256)\n","      \n","      # dense layer 2 (Output layer)\n","      self.fc2 = nn.Linear(256,2)\n","\n","      #softmax activation function\n","      self.softmax = nn.LogSoftmax(dim=1)\n","\n","    #define the forward pass\n","    def forward(self, sent_id, mask):\n","\n","      #pass the inputs to the model  \n","      _,cls_hs = self.bert(sent_id,mask, return_dict=False)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn11111 \",cls_hs.shape)\n","      x = self.fc1(cls_hs)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn22222 \",x.shape)\n","      x = self.relu(x)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn22222 \",x.shape)\n","      x = self.dropout(x)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn22222 \",x.shape)\n","      # output layer\n","      x = self.fc2(x)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn22222 \",x.shape)\n","      # apply softmax activation\n","      x = self.softmax(x)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn22222 \",x.shape)\n","      return x"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qkzQrcKaj74E"},"source":["# pass the pre-trained BERT to our define architecture\n","model = BERT_Arch(bert)\n","\n","# push the model to GPU\n","model = model.to(device)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"taXS0IilRn9J"},"source":["# optimizer from hugging face transformers\n","from transformers import AdamW\n","\n","# define the optimizer\n","optimizer = AdamW(model.parameters(), lr = 2e-5)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"j9CDpoMQR_rK"},"source":["# Find Class Weights"]},{"cell_type":"code","metadata":{"id":"izY5xH5eR7Ur","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626689292584,"user_tz":-330,"elapsed":24,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"0ea71ed6-d6fb-4f9b-91bb-57bfdc7338c7"},"source":["from sklearn.utils.class_weight import compute_class_weight\n","\n","#compute the class weights\n","class_wts = compute_class_weight('balanced', np.unique(train_labels), train_labels)\n","\n","print(class_wts)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[0.93415367 1.07583297]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"r1WvfY2vSGKi"},"source":["# convert class weights to tensor\n","weights= torch.tensor(class_wts,dtype=torch.float)\n","weights = weights.to(device)\n","\n","# loss function\n","cross_entropy  = nn.NLLLoss(weight=weights) \n","\n","# number of training epochs\n","epochs = 10"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"My4CA0qaShLq"},"source":["# Fine-Tune BERT"]},{"cell_type":"code","metadata":{"id":"rskLk8R_SahS"},"source":["# function to train the model\n","def train():\n","  \n","  model.train()\n","\n","  total_loss, total_accuracy = 0, 0\n","  \n","  # empty list to save model predictions\n","  total_preds=[]\n","  \n","  # iterate over batches\n","  for step,batch in enumerate(train_dataloader):\n","    \n","    # progress update after every 50 batches.\n","    if step % 50 == 0 and not step == 0:\n","      print('  Batch {:>5,}  of  {:>5,}.'.format(step, len(train_dataloader)))\n","\n","    # push the batch to gpu\n","    batch = [r.to(device) for r in batch]\n"," \n","    sent_id, mask, labels = batch\n","\n","    # clear previously calculated gradients \n","    model.zero_grad()        \n","\n","    # get model predictions for the current batch\n","    preds = model(sent_id, mask)\n","\n","    # compute the loss between actual and predicted values\n","    loss = cross_entropy(preds, labels)\n","\n","    # add on to the total loss\n","    total_loss = total_loss + loss.item()\n","\n","    # backward pass to calculate the gradients\n","    loss.backward()\n","\n","    # clip the the gradients to 1.0. It helps in preventing the exploding gradient problem\n","    torch.nn.utils.clip_grad_norm_(model.parameters(), 1.0)\n","\n","    # update parameters\n","    # xm.optimizer_step(optimizer)\n","    optimizer.step()\n","\n","    # model predictions are stored on GPU. So, push it to CPU\n","    preds=preds.detach().cpu().numpy()\n","\n","    # append the model predictions\n","    total_preds.append(preds)\n","\n","  # compute the training loss of the epoch\n","  avg_loss = total_loss / len(train_dataloader)\n","  \n","  # predictions are in the form of (no. of batches, size of batch, no. of classes).\n","  # reshape the predictions in form of (number of samples, no. of classes)\n","  total_preds  = np.concatenate(total_preds, axis=0)\n","\n","  #returns the loss and predictions\n","  return avg_loss, total_preds"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"yGXovFDlSxB5"},"source":["# function for evaluating the model\n","def evaluate():\n","  \n","  print(\"\\nEvaluating...\")\n","  \n","  # deactivate dropout layers\n","  model.eval()\n","\n","  total_loss, total_accuracy = 0, 0\n","  \n","  # empty list to save the model predictions\n","  total_preds = []\n","\n","  # iterate over batches\n","  for step,batch in enumerate(val_dataloader):\n","    \n","    # Progress update every 50 batches.\n","    if step % 50 == 0 and not step == 0:\n","      \n","      # Calculate elapsed time in minutes.\n","      # elapsed = format_time(time.time() - t0)\n","            \n","      # Report progress.\n","      print('  Batch {:>5,}  of  {:>5,}.'.format(step, len(val_dataloader)))\n","\n","    # push the batch to gpu\n","    batch = [t.to(device) for t in batch]\n","\n","    sent_id, mask, labels = batch\n","\n","    # deactivate autograd\n","    with torch.no_grad():\n","      \n","      # model predictions\n","      preds = model(sent_id, mask)\n","\n","      # compute the validation loss between actual and predicted values\n","      loss = cross_entropy(preds,labels)\n","\n","      total_loss = total_loss + loss.item()\n","\n","      preds = preds.detach().cpu().numpy()\n","\n","      total_preds.append(preds)\n","\n","  # compute the validation loss of the epoch\n","  avg_loss = total_loss / len(val_dataloader) \n","\n","  # reshape the predictions in form of (number of samples, no. of classes)\n","  total_preds  = np.concatenate(total_preds, axis=0)\n","\n","  return avg_loss, total_preds"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WHQlio6yM_QH"},"source":["from sklearn.metrics import accuracy_score, precision_recall_fscore_support\n","# !nvidia-smi"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9KZEgxRRTLXG"},"source":["# Start Model Training"]},{"cell_type":"code","metadata":{"id":"k1USGTntS3TS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626690471568,"user_tz":-330,"elapsed":1178998,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"04795570-cfb2-4ec2-c528-0e585f27a85b"},"source":["# set initial loss to infinite\n","best_valid_loss = float('inf')\n","\n","# empty lists to store training and validation loss of each epoch\n","train_losses=[]\n","valid_losses=[]\n","\n","#for each epoch\n","epochs=1\n","for epoch in range(epochs):\n","     \n","    print('\\n Epoch {:} / {:}'.format(epoch + 1, epochs))\n","    \n","    #train model\n","    train_loss,_ = train()\n","    \n","    #evaluate model\n","    valid_loss, _ = evaluate()\n","    \n","    #save the best model\n","    if valid_loss < best_valid_loss:\n","        best_valid_loss = valid_loss\n","        torch.save(model.state_dict(), 'saved_weights.pt')\n","    \n","    # append training and validation loss\n","    train_losses.append(train_loss)\n","    valid_losses.append(valid_loss)\n","\n","    # get predictions for test data\n","    # !nvidia-smi\n","    # with torch.no_grad():\n","    #   preds = model(test_seq.to(device), test_mask.to(device))\n","    #   preds = preds.detach().cpu().numpy()\n","    # preds = np.argmax(preds, axis = 1)\n","    # print(classification_report(test_y, preds))\n","    # print(accuracy_score(test_y, preds))\n","\n","    print(f'\\nTraining Loss: {train_loss:.3f}')\n","    print(f'Validation Loss: {valid_loss:.3f}')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\n"," Epoch 1 / 1\n","  Batch    50  of  1,244.\n","  Batch   100  of  1,244.\n","  Batch   150  of  1,244.\n","  Batch   200  of  1,244.\n","  Batch   250  of  1,244.\n","  Batch   300  of  1,244.\n","  Batch   350  of  1,244.\n","  Batch   400  of  1,244.\n","  Batch   450  of  1,244.\n","  Batch   500  of  1,244.\n","  Batch   550  of  1,244.\n","  Batch   600  of  1,244.\n","  Batch   650  of  1,244.\n","  Batch   700  of  1,244.\n","  Batch   750  of  1,244.\n","  Batch   800  of  1,244.\n","  Batch   850  of  1,244.\n","  Batch   900  of  1,244.\n","  Batch   950  of  1,244.\n","  Batch 1,000  of  1,244.\n","  Batch 1,050  of  1,244.\n","  Batch 1,100  of  1,244.\n","  Batch 1,150  of  1,244.\n","  Batch 1,200  of  1,244.\n","\n","Evaluating...\n","  Batch    50  of     62.\n","\n","Training Loss: 0.679\n","Validation Loss: 0.694\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_yrhUc9kTI5a"},"source":["# Load Saved Model"]},{"cell_type":"code","metadata":{"id":"OacxUyizS8d1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626690484027,"user_tz":-330,"elapsed":1613,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"20e31fc7-c02b-4811-adf9-7d43a85dc7c2"},"source":["#load weights of best model\n","path = 'saved_weights.pt'\n","model.load_state_dict(torch.load(path))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<All keys matched successfully>"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"RX0VgLMXHw7h"},"source":["# import tensorflow as tf\n","# path='/content/drive/MyDrive/Sarcasm_model_weights/model.json.hdf5'\n","# model=tf.keras.models.load_model(path)\n","# path = '/content/drive/MyDrive/Sarcasm_model_weights/weights.05__.hdf5'\n","# model.load_weights(path)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"x4SVftkkTZXA"},"source":["# Get Predictions for Test Data"]},{"cell_type":"code","metadata":{"id":"NZl0SZmFTRQA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626690541383,"user_tz":-330,"elapsed":54618,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"64161616-4c24-4c4d-bdf8-59ffd1205719"},"source":["pred=[]\n","with torch.no_grad():\n","  for i in range(0,79):\n","    preds = model(test_seq[i*25:i*25+25].to(device), test_mask[i*25:i*25+25].to(device))\n","    preds = preds.detach().cpu().numpy()\n","    pred.append(preds)\n","print(np.array(pred).shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(79, 25, 2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WfHQYSOAgLyT"},"source":["pred1=np.array(pred)\n","# pred1"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fmSzWK63gL5z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626690544339,"user_tz":-330,"elapsed":5,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"f9f4903d-4207-4dcd-90ec-5ea89a9731de"},"source":["pred2=pred1.reshape((1975,2))\n","pred2.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1975, 2)"]},"metadata":{"tags":[]},"execution_count":37}]},{"cell_type":"code","metadata":{"id":"nQ_1m2WhgL7k"},"source":["p=pd.DataFrame(pred2)\n","p.to_csv('Rresponse.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"d8su6xM8gSNJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626690545155,"user_tz":-330,"elapsed":3,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"17a63631-b2b3-4bf7-91e4-8d7c064b3dcc"},"source":["pred3 = np.argmax(pred2, axis = 1)\n","pred3 "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, ..., 0, 0, 0])"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"code","metadata":{"id":"ZMw2NRnngSQs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626690547340,"user_tz":-330,"elapsed":3,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"a3ece691-777e-4775-e17b-ee97030ea6cc"},"source":["print(classification_report(test_y, pred3))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.50      0.99      0.66       975\n","           1       0.72      0.03      0.05      1000\n","\n","    accuracy                           0.50      1975\n","   macro avg       0.61      0.51      0.36      1975\n","weighted avg       0.61      0.50      0.35      1975\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5K4dl1AQgShx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626690553475,"user_tz":-330,"elapsed":664,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"e8ae3049-d4f0-4059-9dfc-3e2c32aad72e"},"source":["# confusion matrix\n","# print(pred)\n","pd.crosstab(test_y, pred3)\n","from sklearn.metrics import accuracy_score, precision_recall_fscore_support\n","\n","print(accuracy_score(test_y, pred3))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0.5017721518987341\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"W14537b4ubb6"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"G0psIEgeubdz","colab":{"base_uri":"https://localhost:8080/","height":420},"executionInfo":{"status":"ok","timestamp":1626419627434,"user_tz":420,"elapsed":379,"user":{"displayName":"Abhishek Ranjan.","photoUrl":"","userId":"10050815449966213198"}},"outputId":"ee926fd7-ac46-4d0c-ead0-4f8e182867b3"},"source":["brcc=pd.read_csv('/content/drive/MyDrive/sarcasm-detection/Results/bert/73.77_response_only.csv')\n","brcc"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>-0.752169</td>\n","      <td>-0.637415</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>-0.193796</td>\n","      <td>-1.736283</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>-0.170170</td>\n","      <td>-1.854833</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>-0.569712</td>\n","      <td>-0.833993</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>-0.060625</td>\n","      <td>-2.833202</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1795</th>\n","      <td>1795</td>\n","      <td>-1.910129</td>\n","      <td>-0.160241</td>\n","    </tr>\n","    <tr>\n","      <th>1796</th>\n","      <td>1796</td>\n","      <td>-2.255020</td>\n","      <td>-0.110788</td>\n","    </tr>\n","    <tr>\n","      <th>1797</th>\n","      <td>1797</td>\n","      <td>-0.371105</td>\n","      <td>-1.171092</td>\n","    </tr>\n","    <tr>\n","      <th>1798</th>\n","      <td>1798</td>\n","      <td>-3.717061</td>\n","      <td>-0.024606</td>\n","    </tr>\n","    <tr>\n","      <th>1799</th>\n","      <td>1799</td>\n","      <td>-3.675460</td>\n","      <td>-0.025664</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1800 rows × 3 columns</p>\n","</div>"],"text/plain":["      Unnamed: 0         0         1\n","0              0 -0.752169 -0.637415\n","1              1 -0.193796 -1.736283\n","2              2 -0.170170 -1.854833\n","3              3 -0.569712 -0.833993\n","4              4 -0.060625 -2.833202\n","...          ...       ...       ...\n","1795        1795 -1.910129 -0.160241\n","1796        1796 -2.255020 -0.110788\n","1797        1797 -0.371105 -1.171092\n","1798        1798 -3.717061 -0.024606\n","1799        1799 -3.675460 -0.025664\n","\n","[1800 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":90}]},{"cell_type":"code","metadata":{"id":"1eyDGkYuubhK"},"source":["# brc=pd.read_csv('context_1+r_2e.csv')\n","# brc"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ms1ObHZxTYSI"},"source":["# br=pd.read_csv('response1.csv')\n","# br"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YqzLS7rHTp4T"},"source":["# bc=pd.read_csv('contexto.csv')\n","# bc"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jpX1uTwjUPY6"},"source":["# bertc=np.array(bc[['0','1']])\n","# bertc1=np.multiply(bertc,0.1)\n","\n","bertrcc=np.array(brcc[['0','1']])\n","bertrcc1=np.multiply(bertrcc,1)\n","\n","# bertcr=np.array(brc[['0','1']])\n","# bertcr1=np.multiply(bertcr,0.4)\n","\n","# bertr=np.array(br[['0','1']])\n","# bertr1=np.multiply(bertr,0.4)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BY2P7H1W2Wo4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626419627827,"user_tz":420,"elapsed":7,"user":{"displayName":"Abhishek Ranjan.","photoUrl":"","userId":"10050815449966213198"}},"outputId":"9d6078f2-e925-4665-cfab-93ee1b543bac"},"source":["# yhats = [bertc1,bertr1,bertcr1,bertrcc1]\n","yhats = [bertrcc1]\n","# import numpy as np\n","yhats = np.array(yhats)\n","\n","# # sum across ensemble members\n","summed = np.sum(yhats, axis=0)\n","# # argmax across classes\n","result = np.argmax(summed, axis=1)\n","# result = np.argmax(yhats, axis=0)\n","print(result)\n","from sklearn.metrics import accuracy_score, precision_recall_fscore_support\n","accuracy_score(result,test_y)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[1 0 0 ... 0 1 1]\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["0.7377777777777778"]},"metadata":{"tags":[]},"execution_count":95}]}]}